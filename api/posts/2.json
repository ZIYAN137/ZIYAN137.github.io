{"total":22,"pageSize":10,"pageCount":3,"data":[{"title":"计算机网络（中科大）_Chapter6","slug":"计算机网络（中科大）_Chapter6","date":"2025-03-31T07:10:44.000Z","updated":"2025-05-05T04:30:44.386Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter6.json","excerpt":"<h1 id=\"第六章-链路层和局域网\"><a href=\"#第六章-链路层和局域网\" class=\"headerlink\" title=\"第六章 链路层和局域网\"></a>第六章 链路层和局域网</h1><p>链路层是计算机网络中的第二层，主要负责在同一网络内节点之间的通信。它不仅保证了数据帧的可靠传输，还实现了多种重要功能，如差错检测与纠正、流量控制以及多点接入的信道管理。在局域网（LAN）中，链路层的作用尤为突出，因为它直接关系到节点间的有效通信和数据传输的稳定性。</p>\n<p>本章将深入探讨链路层的核心功能，包括数据帧的封装与解封装、差错检测和纠正机制、以及多路访问协议（MAC协议）。同时，我们将重点介绍局域网技术，特别是以太网、无线局域网（WLAN）、虚拟局域网（VLAN）等常见网络类型。此外，本章还将分析交换机的工作原理，探讨其如何提高局域网的效率并解决传统集线器（Hub）在高负载情况下的性能瓶颈。</p>\n<p>通过学习本章，您将掌握链路层的基本概念与工作原理，了解局域网的构建与管理，并能应对局域网中常见的网络挑战。</p>","keywords":null,"cover":"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter6/Cover.png","content":null,"text":"第六章 链路层和局域网链路层是计算机网络中的第二层，主要负责在同一网络内节点之间的通信。它不仅保证了数据帧的可靠传输，还实现了多种重要功能，如差错检测与纠正、流量控制以及多点接入的信道管理。在局域网（LAN）中，链路层的作用尤为突出，因为它直接关系到节点间的有效通信和数据传输的稳","raw":null,"photos":[],"categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]},{"title":"计算机网络（中科大）_Chapter5","slug":"计算机网络（中科大）_Chapter5","date":"2025-03-31T07:09:58.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter5.json","excerpt":"<h1 id=\"第五章-网络层-控制平面\"><a href=\"#第五章-网络层-控制平面\" class=\"headerlink\" title=\"第五章 网络层: 控制平面\"></a>第五章 网络层: 控制平面</h1><p>网络层不仅负责数据包的转发，还承担着重要的控制职能，这一职能通常由控制平面来实现。控制平面主要负责路由选择，即决定数据包应通过哪些路径从源主机传输到目标主机。它通过交换和更新路由信息，确保网络能够应对动态变化，保持数据传输的高效与稳定。</p>\n<p>本章将深入探讨网络层的控制平面，重点介绍不同类型的路由选择算法，包括Link State算法与Distance Vector算法的工作原理、优缺点及应用情况。同时，我们还将详细讲解自治系统内部的路由选择协议，如RIP和OSPF，以及它们如何在不同规模的网络中发挥作用。此外，BGP协议在ISP之间的路由选择中扮演着重要角色，它如何基于策略而非单纯的性能进行路径选择，也将在本章中得到深入分析。</p>\n<p>通过本章的学习，您将能够理解控制平面在网络层中的核心作用，掌握常见的路由算法以及它们在实际网络中的应用。</p>","keywords":null,"cover":"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter5/Cover.png","content":null,"text":"第五章 网络层: 控制平面网络层不仅负责数据包的转发，还承担着重要的控制职能，这一职能通常由控制平面来实现。控制平面主要负责路由选择，即决定数据包应通过哪些路径从源主机传输到目标主机。它通过交换和更新路由信息，确保网络能够应对动态变化，保持数据传输的高效与稳定。本章将深入探讨网络","raw":null,"photos":[],"categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]},{"title":"计算机网络（中科大）_Chapter4","slug":"计算机网络（中科大）_Chapter4","date":"2025-03-31T07:09:50.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter4.json","excerpt":"<h1 id=\"第四章-网络层-数据平面\"><a href=\"#第四章-网络层-数据平面\" class=\"headerlink\" title=\"第四章 网络层: 数据平面\"></a>第四章 网络层: 数据平面</h1><p>网络层是现代计算机网络架构中的核心部分，负责确保数据包能够在网络中从源主机传输到目标主机。在数据平面中，网络层的任务主要是进行数据包的转发与路由，而这些任务的实现离不开高效的路由器结构、转发算法以及创新的网络技术。</p>\n<p>本章将深入探讨网络层的数据平面功能，重点介绍数据包的转发机制、路由器的工作原理、IP协议、分片与重组等基本概念。此外，我们将讨论传统路由方法与软件定义网络（SDN）模式的区别，并分析SDN如何通过分离控制平面与数据平面，改变网络管理的方式，提升灵活性与效率。</p>\n<p>通过这一章的学习，您将掌握网络层数据平面的基本操作及其在现代网络中的应用。</p>","keywords":null,"cover":"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/Cover.png","content":null,"text":"第四章 网络层: 数据平面网络层是现代计算机网络架构中的核心部分，负责确保数据包能够在网络中从源主机传输到目标主机。在数据平面中，网络层的任务主要是进行数据包的转发与路由，而这些任务的实现离不开高效的路由器结构、转发算法以及创新的网络技术。本章将深入探讨网络层的数据平面功能，重点","raw":null,"photos":[],"categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]},{"title":"计算机网络（中科大）_Chapter3","slug":"计算机网络（中科大）_Chapter3","date":"2025-03-31T07:09:32.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter3.json","excerpt":"<h1 id=\"第三章-传输层\"><a href=\"#第三章-传输层\" class=\"headerlink\" title=\"第三章 传输层\"></a>第三章 传输层</h1><p>在网络通信中，传输层是连接网络层与应用层之间的桥梁。它不仅负责实现端到端的进程通信，更要保障数据传输的可靠性、有序性与效率。无论是浏览网页、传输文件，还是观看视频、进行在线游戏，传输层都发挥着至关重要的作用。</p>\n<p>本章将深入剖析传输层的核心机制，包括多路复用与解复用、UDP与TCP协议的结构与特点、可靠数据传输的设计原理、流量控制、连接管理，以及拥塞控制的策略与实现。此外，还将介绍经典的滑动窗口协议和TCP拥塞控制算法，帮助读者从理论与实践两方面全面掌握传输层的工作原理与技术细节。</p>","keywords":null,"cover":"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter3/Cover.png","content":null,"text":"第三章 传输层在网络通信中，传输层是连接网络层与应用层之间的桥梁。它不仅负责实现端到端的进程通信，更要保障数据传输的可靠性、有序性与效率。无论是浏览网页、传输文件，还是观看视频、进行在线游戏，传输层都发挥着至关重要的作用。本章将深入剖析传输层的核心机制，包括多路复用与解复用、UD","raw":null,"photos":[],"categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]},{"title":"计算机网络（中科大）_Chapter2","slug":"计算机网络（中科大）_Chapter2","date":"2025-03-31T07:08:36.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter2.json","excerpt":"<h1 id=\"第二章-应用层\"><a href=\"#第二章-应用层\" class=\"headerlink\" title=\"第二章 应用层\"></a>第二章 应用层</h1><p>计算机网络中的应用层是与用户直接交互的层级，提供各种网络服务的基础。应用层协议种类繁多，它们是实现网络通信的关键，涵盖了从电子邮件、网页浏览到即时通讯、文件传输等众多应用。无论是通过客户端-服务器模式，还是对等（P2P）模式，应用层都为各种不同类型的网络应用提供了支持。</p>\n<p>本篇博客将深入探讨应用层的原理与常见协议，涵盖包括HTTP、FTP、SMTP、DNS等网络协议的工作原理，以及它们如何实现不同的网络服务。此外，还将介绍如何通过Socket编程实现基于TCP和UDP的网络通信，为读者提供理解和实践的基础。</p>","keywords":null,"cover":"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter2/Cover.png","content":null,"text":"第二章 应用层计算机网络中的应用层是与用户直接交互的层级，提供各种网络服务的基础。应用层协议种类繁多，它们是实现网络通信的关键，涵盖了从电子邮件、网页浏览到即时通讯、文件传输等众多应用。无论是通过客户端-服务器模式，还是对等（P2P）模式，应用层都为各种不同类型的网络应用提供了支","raw":null,"photos":[],"categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]},{"title":"计算机网络（中科大）_Chapter1","slug":"计算机网络（中科大）_Chapter1","date":"2025-03-31T05:42:21.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter1.json","excerpt":"<h1 id=\"第一章-计算机网络概述\"><a href=\"#第一章-计算机网络概述\" class=\"headerlink\" title=\"第一章 计算机网络概述\"></a>第一章 计算机网络概述</h1><p>计算机网络是现代通信的基础，它通过各种协议和技术连接全球的计算设备。互联网作为全球最大的计算机网络，依靠TCP/IP协议实现数据的传输与共享。</p>\n<p>本篇博客将简要介绍计算机网络的基本概念、网络结构、性能、协议层次和服务模型，帮助读者快速了解计算机网络的运作原理。</p>","keywords":null,"cover":"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter1/Cover.png","content":null,"text":"第一章 计算机网络概述计算机网络是现代通信的基础，它通过各种协议和技术连接全球的计算设备。互联网作为全球最大的计算机网络，依靠TCP/IP协议实现数据的传输与共享。本篇博客将简要介绍计算机网络的基本概念、网络结构、性能、协议层次和服务模型，帮助读者快速了解计算机网络的运作原理。 ","raw":null,"photos":[],"categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]},{"title":"微服务架构与设计模式（张引）_part2","slug":"微服务架构与设计模式（张引）-part2","date":"2025-03-17T15:51:06.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/微服务架构与设计模式（张引）-part2.json","excerpt":"<h1 id=\"单体应用与微服务架构应用\"><a href=\"#单体应用与微服务架构应用\" class=\"headerlink\" title=\"单体应用与微服务架构应用\"></a>单体应用与微服务架构应用</h1><p>在软件架构设计中，单体应用和微服务架构是两种常见模式，各有优缺点。单体应用适合简单项目，开发、部署、测试和调试较为方便，但随着业务增长，维护和扩展变得困难。而微服务架构将系统拆分为多个独立服务，提升可扩展性和技术灵活性，但增加了开发、部署和测试的复杂度。</p>\n<p>本篇博客将介绍 单体应用与微服务架构的核心概念、优缺点及适用场景，帮助开发者在实际项目中做出合适的架构选择。</p>","keywords":null,"cover":null,"content":null,"text":"单体应用与微服务架构应用在软件架构设计中，单体应用和微服务架构是两种常见模式，各有优缺点。单体应用适合简单项目，开发、部署、测试和调试较为方便，但随着业务增长，维护和扩展变得困难。而微服务架构将系统拆分为多个独立服务，提升可扩展性和技术灵活性，但增加了开发、部署和测试的复杂度。本","raw":null,"photos":[],"categories":[],"tags":[{"name":"微服务","slug":"微服务","count":3,"path":"api/tags/微服务.json"}]},{"title":"微服务架构与设计模式（张引）_part1","slug":"微服务架构与设计模式（张引）-part1","date":"2025-03-17T15:39:34.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/微服务架构与设计模式（张引）-part1.json","excerpt":"<h1 id=\"容器、容器编排、容器化开发\"><a href=\"#容器、容器编排、容器化开发\" class=\"headerlink\" title=\"容器、容器编排、容器化开发\"></a>容器、容器编排、容器化开发</h1><p>在软件开发中，环境配置繁琐、兼容性问题和资源浪费是常见挑战。虚拟化技术虽能隔离环境，但传统虚拟机启动慢、占用资源多。Docker 作为轻量级虚拟化方案，解决了这些问题，使应用部署更高效。</p>\n<p>本篇博客介绍 Docker 的基本概念、容器管理、数据库镜像使用，以及 Docker Compose 容器编排，并探讨 如何使用 Dockerfile 进行容器化开发，帮助开发者高效构建和部署应用。</p>","keywords":null,"cover":null,"content":null,"text":"容器、容器编排、容器化开发在软件开发中，环境配置繁琐、兼容性问题和资源浪费是常见挑战。虚拟化技术虽能隔离环境，但传统虚拟机启动慢、占用资源多。Docker 作为轻量级虚拟化方案，解决了这些问题，使应用部署更高效。本篇博客介绍 Docker 的基本概念、容器管理、数据库镜像使用，以","raw":null,"photos":[],"categories":[],"tags":[{"name":"微服务","slug":"微服务","count":3,"path":"api/tags/微服务.json"}]},{"title":"微服务架构与设计模式（张引）","slug":"微服务架构与设计模式（张引）","date":"2025-03-17T15:36:32.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/微服务架构与设计模式（张引）.json","excerpt":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>仓颉云原生</p>\n<p>今年的课程转为了仓颉版本，用仓颉语言按照业界的实际标准搓了一套微服务的框架</p>\n<p><img src=\"/../Asset/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%BC%A0%E5%BC%95%EF%BC%89/image.png\"></p>\n<p>正如MiniX之于Unix，教学用的框架复杂度更低。易于同学们理解和使用。</p>","keywords":null,"cover":"/../Asset/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%BC%A0%E5%BC%95%EF%BC%89/image.png","content":null,"text":"介绍仓颉云原生今年的课程转为了仓颉版本，用仓颉语言按照业界的实际标准搓了一套微服务的框架 [Figure] 然后一路回车即可，生成的密钥默认存放在~/.ssh/之后复制公钥 ~/.ssh/id_rsa.pub的内容，并添加到GitCode的SSH Key设置页面","raw":null,"photos":[],"categories":[],"tags":[{"name":"微服务","slug":"微服务","count":3,"path":"api/tags/微服务.json"}]},{"title":"DDIA_Chapter1","slug":"DDIA-Chapter1","date":"2025-03-14T08:29:36.000Z","updated":"2025-05-05T04:30:44.384Z","comments":true,"path":"api/articles/DDIA-Chapter1.json","excerpt":"<h1 id=\"第一章-可靠性，可伸缩性，可维护性\"><a href=\"#第一章-可靠性，可伸缩性，可维护性\" class=\"headerlink\" title=\"第一章 可靠性，可伸缩性，可维护性\"></a>第一章 可靠性，可伸缩性，可维护性</h1><p>现今很多应用程序都是 数据密集型（data-intensive） 的，而非 计算密集型（compute-intensive） 的。因此 CPU 很少成为这类应用的瓶颈，更大的问题通常来自数据量、数据复杂性、以及数据的变更速度。</p>\n<p>我们通常认为，数据库、消息队列、缓存等工具分属于几个差异显著的类别。但现在合称为数据系统。</p>\n<ul>\n<li><p>近些年来，出现了许多新的数据存储工具与数据处理工具。它们针对不同应用场景进行优化，如数据存储可以被当成消息队列用（Redis），消息队列则带有类似数据库的持久保证（Apache Kafka）</p>\n</li>\n<li><p>单个工具不足以满足所有的数据处理和存储需求，总体工作将被拆分成一系列单个足以高效完成的任务，然后用应用代码将它们缝合起来。然后隐藏实现细节，提供服务的接口或者API。</p>\n</li>\n</ul>","keywords":null,"cover":"/../Asset/DDIA_Chapter1/DDIA.png","content":null,"text":"第一章 可靠性，可伸缩性，可维护性现今很多应用程序都是 数据密集型（data-intensive） 的，而非 计算密集型（compute-intensive） 的。因此 CPU 很少成为这类应用的瓶颈，更大的问题通常来自数据量、数据复杂性、以及数据的变更速度。我们通常认为，数据库","raw":null,"photos":[],"categories":[{"name":"分布式","slug":"分布式","count":3,"path":"api/categories/分布式.json"},{"name":"DDIA","slug":"分布式/DDIA","count":3,"path":"api/categories/分布式/DDIA.json"}],"tags":[{"name":"分布式","slug":"分布式","count":3,"path":"api/tags/分布式.json"},{"name":"DDIA","slug":"DDIA","count":3,"path":"api/tags/DDIA.json"}]}]}