{"title":"计算机网络（中科大）_Chapter4","slug":"计算机网络（中科大）_Chapter4","date":"2025-03-31T07:09:50.000Z","updated":"2025-05-05T04:30:44.385Z","comments":true,"path":"api/articles/计算机网络（中科大）_Chapter4.json","photos":[],"excerpt":"第四章 网络层: 数据平面网络层是现代计算机网络架构中的核心部分，负责确保数据包能够在网络中从源主机传输到目标主机。在数据平面中，网络层的任务主要是进行数据包的转发与路由，而这些任务的实现离不开高效的路由器结构、转发算法以及创新的网络技术。本章将深入探讨网络层的数据平面功能，重点介绍数据包的转发机制、路由器的工作原理、IP协议、分片与重组等基本概念。此外，我们将讨论传统路由方法与软件定义网络（SDN）模式的区别，并分析SDN如何通过分离控制平面与数据平面，改变网络管理的方式，提升灵活性与效率。通过这一章的学习，您将掌握网络层数据平面的基本操作及其在现代网络中的应用。","covers":["/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/Cover.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-112.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-110.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-105.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-106.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-134.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-132.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-129.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-128.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-133.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-131.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-130.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-123.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-125.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-124.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-122.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-120.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-126.png","/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-127.png"],"content":"<h1 id=\"第四章-网络层-数据平面\"><a href=\"#第四章-网络层-数据平面\" class=\"headerlink\" title=\"第四章 网络层: 数据平面\"></a>第四章 网络层: 数据平面</h1><p>网络层是现代计算机网络架构中的核心部分，负责确保数据包能够在网络中从源主机传输到目标主机。在数据平面中，网络层的任务主要是进行数据包的转发与路由，而这些任务的实现离不开高效的路由器结构、转发算法以及创新的网络技术。</p>\n<p>本章将深入探讨网络层的数据平面功能，重点介绍数据包的转发机制、路由器的工作原理、IP协议、分片与重组等基本概念。此外，我们将讨论传统路由方法与软件定义网络（SDN）模式的区别，并分析SDN如何通过分离控制平面与数据平面，改变网络管理的方式，提升灵活性与效率。</p>\n<p>通过这一章的学习，您将掌握网络层数据平面的基本操作及其在现代网络中的应用。</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/Cover.png\"></p>\n<h2 id=\"4-1-导论\"><a href=\"#4-1-导论\" class=\"headerlink\" title=\"4.1 导论\"></a>4.1 导论</h2><h3 id=\"网络层服务\"><a href=\"#网络层服务\" class=\"headerlink\" title=\"网络层服务\"></a>网络层服务</h3><p>在发送主机和接收主机之间传送段</p>\n<p>在发送端将段封装到数据报中</p>\n<p>在接收端，将段上交给传输层实体</p>\n<p>网络层协议存在于每一个主机和路由器</p>\n<p>路由器检查每一个经过它的IP数据报的头部</p>\n<h3 id=\"网络层功能\"><a href=\"#网络层功能\" class=\"headerlink\" title=\"网络层功能\"></a>网络层功能</h3><h4 id=\"转发（局部的）\"><a href=\"#转发（局部的）\" class=\"headerlink\" title=\"转发（局部的）\"></a>转发（局部的）</h4><p>将分组从路由器的输入接口转发到合适的输出接口</p>\n<h4 id=\"路由（全局的）\"><a href=\"#路由（全局的）\" class=\"headerlink\" title=\"路由（全局的）\"></a>路由（全局的）</h4><p>使用路由算法来决定分组从发送主机到目标接收主机的路径</p>\n<h3 id=\"数据平面和控制平面\"><a href=\"#数据平面和控制平面\" class=\"headerlink\" title=\"数据平面和控制平面\"></a>数据平面和控制平面</h3><h4 id=\"数据平面\"><a href=\"#数据平面\" class=\"headerlink\" title=\"数据平面\"></a>数据平面</h4><ul>\n<li><p>本地，每个路由器的功能</p>\n</li>\n<li><p>决定从路由器输入端口到达的分组如何转发到输出端口</p>\n</li>\n<li><p>转发功能：</p>\n<ul>\n<li><p>传统方式：基于目标地址+转发表</p>\n</li>\n<li><p>SDN方式：基于多个字段+流表</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"控制平面\"><a href=\"#控制平面\" class=\"headerlink\" title=\"控制平面\"></a>控制平面</h4><ul>\n<li><p>网络范围内的逻辑</p>\n</li>\n<li><p>决定数据报如何在路由器之间路由，决定数据报从源到目标主机之间的端到端的路径</p>\n</li>\n<li><p>2个控制平面方法：</p>\n<ul>\n<li><p>传统的路由算法：在路由器中被实现</p>\n</li>\n<li><p>SDN（Soft Defined Networking）：在远程服务器中实现</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"传统方式\"><a href=\"#传统方式\" class=\"headerlink\" title=\"传统方式\"></a>传统方式</h3><p>每个路由器既实现了控制平面的功能又实现了数据平面的功能。</p>\n<p>控制平面和数据平面紧耦合。且都是分布式地实现。</p>\n<p>全球无数的路由设备，因此紧耦合+分布式使得其难以更改。</p>\n<p>控制平面算路由表，数据平面根据路由表进行转发</p>\n<h3 id=\"SDN软件定义网络\"><a href=\"#SDN软件定义网络\" class=\"headerlink\" title=\"SDN软件定义网络\"></a>SDN软件定义网络</h3><p>控制平面功能集中在一个服务器上去做，这个服务器运行网络操作系统，然后通过南向接口和每个分组交换设备打交道，控制器将流表交给每一个分组交换设备，根据流表对分组进行操作。</p>\n<h3 id=\"网络服务模型\"><a href=\"#网络服务模型\" class=\"headerlink\" title=\"网络服务模型\"></a>网络服务模型</h3><p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-112.png\"></p>\n<h2 id=\"4-2-路由器的组成\"><a href=\"#4-2-路由器的组成\" class=\"headerlink\" title=\"4.2 路由器的组成\"></a>4.2 路由器的组成</h2><h3 id=\"路由器结构概况\"><a href=\"#路由器结构概况\" class=\"headerlink\" title=\"路由器结构概况\"></a>路由器结构概况</h3><p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-110.png\"></p>\n<ul>\n<li><p>路由处理器：用于管理控平面，在上面运行IP协议实体，计算转发的路由表下载到 输出端口</p>\n</li>\n<li><p>high-speed switching fabric：快速高效地转发数据</p>\n</li>\n<li><p>输入端口输出端口：输入端口接收从其他网络节点传来的数据，输出端口负责将数据转发到下一个节点</p>\n</li>\n</ul>\n<h3 id=\"输入端口\"><a href=\"#输入端口\" class=\"headerlink\" title=\"输入端口\"></a>输入端口</h3><p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-105.png\"></p>\n<p>网络层根据数据报头部的信息，如目标地址，在输入端口中的转发表中查找合适的输出端口</p>\n<p>传统方法是基于目标的转发，仅仅依赖于IP数据报的目标IP地址</p>\n<p>SDN则会结合多个字段查找流表</p>\n<h4 id=\"输入端口缓存\"><a href=\"#输入端口缓存\" class=\"headerlink\" title=\"输入端口缓存\"></a>输入端口缓存</h4><p>为什么会有个buffer，因为从链路层到网络层的速度和网络层到fabric的速度不一定相等。要匹配输入端口与其他部分的速率的不一致。</p>\n<p>当交换机构的速率小于输入端口的汇聚速率时，在输入端口可能要排队。</p>\n<p>排队延迟以及输入缓存的溢出会造成丢失。</p>\n<p>Head Of the Line（HOL）blocking：排在对头的数据报阻止了队列中其他数据报向前移动</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-106.png\"></p>\n<h3 id=\"交换结构\"><a href=\"#交换结构\" class=\"headerlink\" title=\"交换结构\"></a>交换结构</h3><p>将分组从输入缓冲区传输到合适的输出端口</p>\n<p>交换速率：分组可以按照该速率从输入传输到输出</p>\n<ul>\n<li><p>运行速度经常是输入/输出链路速率的若干倍</p>\n</li>\n<li><p>N个输入端口：交换机构的交换速度是输入线路速度的N倍比较理想，才不会成为瓶颈</p>\n</li>\n</ul>\n<p>3种典型的交换机构</p>\n<ul>\n<li><p>memory</p>\n</li>\n<li><p>bus</p>\n</li>\n<li><p>crossbar</p>\n</li>\n</ul>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-134.png\"></p>\n<h4 id=\"基于memory\"><a href=\"#基于memory\" class=\"headerlink\" title=\"基于memory\"></a>基于memory</h4><p>第一代路由器</p>\n<ul>\n<li><p>在CPU直接控制下的交换，采用传统的计算机</p>\n</li>\n<li><p>分组被拷贝到系统内存，CPU从分组的头部提取出目标地址，查找转发表，找到对应的输出端口，拷贝到输出端口。</p>\n</li>\n<li><p>转发速率被内存的带宽限制（数据报通过BUS两遍）</p>\n</li>\n<li><p>一次只能转发一个分组</p>\n</li>\n</ul>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-132.png\"></p>\n<h4 id=\"通过总线BUS交换\"><a href=\"#通过总线BUS交换\" class=\"headerlink\" title=\"通过总线BUS交换\"></a>通过总线BUS交换</h4><ul>\n<li><p>数据报通过共享总线，从输入端口转发到所有输出端口，输出端口自己匹配是不是发给自己的。</p>\n</li>\n<li><p>总线竞争：减缓速度仍受限于总线带宽，但是只要经过一次总线，所以速度快于上一种</p>\n</li>\n<li><p>1次处理1个分组</p>\n</li>\n<li><p>对于接入或企业级路由器，速度足够（但不适合区域或骨干网络）</p>\n</li>\n</ul>\n<h4 id=\"通过互联网络（crossbar等）交换\"><a href=\"#通过互联网络（crossbar等）交换\" class=\"headerlink\" title=\"通过互联网络（crossbar等）交换\"></a>通过互联网络（crossbar等）交换</h4><p>同时并发转发多个分组，克服总线带宽的限制</p>\n<p>当分组从A到达时，转给端口Y；控制器短接对应的两个总线</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-129.png\"></p>\n<h3 id=\"输出端口\"><a href=\"#输出端口\" class=\"headerlink\" title=\"输出端口\"></a>输出端口</h3><p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-128.png\"></p>\n<p>和输入端口同理，输出端口也有一个buffer，从fabric中出来的速度快于从网络层发到链路层的速度，所以缓存一下。解决速度不匹配的问题。</p>\n<p>从buffer中出来的顺序不一定是FIFO，取决于具体的调度策略。</p>\n<p>此外，缓冲区如果溢出了，也会导致分组被抛弃。</p>\n<h4 id=\"调度机制\"><a href=\"#调度机制\" class=\"headerlink\" title=\"调度机制\"></a>调度机制</h4><ul>\n<li><p>FIFO（默认）：按照分组到来的次序发送</p>\n</li>\n<li><p>优先权：发送最高优先级的分组。同一优先级的则FIFO</p>\n</li>\n<li><p>round robin：循环扫描不同类型的队列，轮流发送不同类型</p>\n</li>\n<li><p>Weighted Fair Queuing：在Round Robin的基础上加了权重</p>\n</li>\n</ul>\n<h4 id=\"抛弃策略\"><a href=\"#抛弃策略\" class=\"headerlink\" title=\"抛弃策略\"></a>抛弃策略</h4><ul>\n<li><p>tail drop 丢弃最晚到达的分组</p>\n</li>\n<li><p>priority 丢弃或移除最低优先级的分组</p>\n</li>\n<li><p>random 随机丢弃或移除</p>\n</li>\n</ul>\n<h2 id=\"4-3-IP-Internet-Protocol\"><a href=\"#4-3-IP-Internet-Protocol\" class=\"headerlink\" title=\"4.3 IP Internet Protocol\"></a>4.3 IP Internet Protocol</h2><p>网络层有路由协议，IP协议，ICMP协议。</p>\n<p>IP协议主要是数据平面的转发功能。</p>\n<h3 id=\"IP数据报格式（IPv4）\"><a href=\"#IP数据报格式（IPv4）\" class=\"headerlink\" title=\"IP数据报格式（IPv4）\"></a>IP数据报格式（IPv4）</h3><p>4bit版本号，4bit首部长度，8bit服务类型，16bit数据报总长，16bit标识，3bit标志位Flags，13bit分片偏移，8bit生存时间TTL，8bit上层协议，16bit校验和checksum，32bit源IP地址，32bit目标IP地址，可选项，数据部分</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-133.png\"></p>\n<h3 id=\"IP的分片与重组\"><a href=\"#IP的分片与重组\" class=\"headerlink\" title=\"IP的分片与重组\"></a>IP的分片与重组</h3><p>为了防止数据报大小超过MTU，对数据报进行分片</p>\n<p>分片不能朴素地直接切分，应该为每个分片都加一个头部</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-131.png\"></p>\n<p>根据ID判断是同一个数据报，offset来判断先后。offset以8Byte为单位。</p>\n<p>其中，有一个标志位FragFlag，当其为1时标识该分片之后还有分片，0则表示没有。</p>\n<h3 id=\"IP编址\"><a href=\"#IP编址\" class=\"headerlink\" title=\"IP编址\"></a>IP编址</h3><p>IP地址用来标识主机这个说法其实是不准确的，IP地址标识的是主机跟网络的0接口。此处接口指的是主机/路由器和物理链路的连接处。</p>\n<p>Q：这些接口是如何连接的？</p>\n<p>A：详见链路层</p>\n<h4 id=\"子网\"><a href=\"#子网\" class=\"headerlink\" title=\"子网\"></a>子网</h4><p>IP地址分为子网部分（高位bit）和主机部分（地位bit）</p>\n<p>什么是子网？</p>\n<ul>\n<li><p>一个子网内的节点（主机或者路由器）它们的IP地址的高位部分相同，这些节点构成的网络的一部分叫做子网</p>\n</li>\n<li><p>无需路由器介入，子网内各主机可以在物理上相互直接到达</p>\n</li>\n</ul>\n<p>判断方法：</p>\n<ul>\n<li><p>将每一个接口从主机或者路由器上分开，构成了一个个网络的孤岛</p>\n</li>\n<li><p>每一个孤岛都可称为subnet</p>\n</li>\n</ul>\n<h4 id=\"IP地址分类\"><a href=\"#IP地址分类\" class=\"headerlink\" title=\"IP地址分类\"></a>IP地址分类</h4><ul>\n<li><p>A类前缀为0 单播地址</p>\n</li>\n<li><p>B类前缀为10 单播地址</p>\n</li>\n<li><p>C类前缀为110 单播地址</p>\n</li>\n<li><p>D类前缀为1110 组播地址</p>\n</li>\n<li><p>E类前缀为11110 预留</p>\n</li>\n</ul>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-130.png\"></p>\n<h4 id=\"特殊IP地址：\"><a href=\"#特殊IP地址：\" class=\"headerlink\" title=\"特殊IP地址：\"></a>特殊IP地址：</h4><p>子网部分全为0：本网络</p>\n<p>主机部分全为1：本主机</p>\n<p>主机部分全为1：广播地址，广播给这个网络的所有主机</p>\n<p>127.x.x.x回路地址：当TCP或UDP将这个地址传到IP地址的时候，直接反转朝上</p>\n<h4 id=\"内网（专用）IP地址：\"><a href=\"#内网（专用）IP地址：\" class=\"headerlink\" title=\"内网（专用）IP地址：\"></a>内网（专用）IP地址：</h4><p>专用地址：</p>\n<ul>\n<li><p>地址空间的一部分供专用地址使用</p>\n</li>\n<li><p>永远不会被当作公用地址来分配，不会与公用地址重复，只在局部网络有意义</p>\n</li>\n</ul>\n<p>专用地址范围</p>\n<p>ClassA  10.0.0.0-10.255.255.255 MASK 255.0.0.0</p>\n<p>ClassB  172.16.0.0-172.31.255.255 MASK 255.255.0.0</p>\n<p>ClassC  192.168.0.0-192.168.255.255 MASK 255.255.255.0</p>\n<h4 id=\"CIDR无类域间路由\"><a href=\"#CIDR无类域间路由\" class=\"headerlink\" title=\"CIDR无类域间路由\"></a>CIDR无类域间路由</h4><ul>\n<li><p>子网部分可以在任意位置</p>\n</li>\n<li><p>地址格式：a.b.c.d/x，其中x是地址中子网号的长度</p>\n</li>\n</ul>\n<p>引入32bit的子网掩码，如果某一位为1，代表这一部分是子网部分，为0则是主机部分，所以获得子网号可以直接IP地址和子网掩码取逻辑与运算</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-123.png\"></p>\n<h3 id=\"转发表与转发算法\"><a href=\"#转发表与转发算法\" class=\"headerlink\" title=\"转发表与转发算法\"></a>转发表与转发算法</h3><p>转发表具有：目标子网号、掩码、下一跳、端口</p>\n<p>一个分组到来，取出目标地址，与每一个项的Mask取按位与，然后和目标子网号匹配，如果能够匹配，则转发，否则，则匹配下一项</p>\n<h3 id=\"如何获得一个IP地址\"><a href=\"#如何获得一个IP地址\" class=\"headerlink\" title=\"如何获得一个IP地址\"></a>如何获得一个IP地址</h3><ul>\n<li><p>系统管理员将地址配置在文件中</p>\n</li>\n<li><p>DHCP：Dynamic Host Configuration Protocol 从服务器动态获得IP地址</p>\n</li>\n</ul>\n<h3 id=\"DHCP\"><a href=\"#DHCP\" class=\"headerlink\" title=\"DHCP\"></a>DHCP</h3><p>允许主机在加入网络的时候，动态地从服务器那里获得IP地址</p>\n<ul>\n<li><p>可以更新主机在用IP地址的租用期</p>\n</li>\n<li><p>重新启动时，允许重新使用之前用过的IP地址</p>\n</li>\n<li><p>支持移动用户加入到该网络（短期在网）</p>\n</li>\n</ul>\n<h4 id=\"DHCP工作概况\"><a href=\"#DHCP工作概况\" class=\"headerlink\" title=\"DHCP工作概况\"></a>DHCP工作概况</h4><ol>\n<li><p>主机广播DHCP Discover报文</p>\n</li>\n<li><p>DHCP服务器用DHCP Offer提供报文响应</p>\n</li>\n<li><p>主机请求IP地址，发送DHCP request报文</p>\n</li>\n<li><p>DHCP服务器发送地址，DHCP ACK报文</p>\n</li>\n</ol>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-125.png\"></p>\n<p>DHCP Discover（发现）：</p>\n<ul>\n<li><p>当一个设备（例如计算机、智能手机等）连接到网络时，它还没有一个有效的 IP 地址。</p>\n</li>\n<li><p>设备会广播一个 DHCP Discover 消息到网络中，目的是寻找可用的 DHCP 服务器。这个消息的源 IP 地址是 0.0.0.0，因为设备还没有分配到 IP 地址。</p>\n</li>\n</ul>\n<p>DHCP Offer（提供）：</p>\n<ul>\n<li><p>网络中的 DHCP 服务器接收到 DHCP Discover 消息后，会向设备提供一个可用的 IP 地址以及其他网络配置信息（如子网掩码、默认网关、DNS 服务器等）。</p>\n</li>\n<li><p>服务器会通过广播向设备发送 DHCP Offer 消息，提供给设备一个临时的 IP 地址并标明租用时间（即租约）。</p>\n</li>\n</ul>\n<p>DHCP Request（请求）：</p>\n<ul>\n<li><p>设备收到一个或多个 DHCP Offer 后，选择一个最合适的（通常是第一个）并发送 DHCP Request 消息，表示它接受该 IP 地址并请求继续使用。</p>\n</li>\n<li><p>DHCP Request 消息也是广播发送的，以通知网络中其他的 DHCP 服务器自己已经选择了一个地址。</p>\n</li>\n</ul>\n<p>DHCP Acknowledge（确认）：</p>\n<ul>\n<li><p>当 DHCP 服务器收到设备的 DHCP Request 后，它会发送 DHCP Acknowledge 消息，正式确认分配该 IP 地址并记录该设备的租用信息。</p>\n</li>\n<li><p>设备从此获得了一个有效的 IP 地址及其相关网络配置，可以开始在网络上进行通信。</p>\n</li>\n</ul>\n<p>租约续期：</p>\n<ul>\n<li><p>DHCP 服务器分配的 IP 地址是有租约的。设备在租约快到期时会向服务器发送续期请求（DHCP Request），如果服务器同意，租约就会被延长。</p>\n</li>\n<li><p>如果设备不再需要该 IP 地址（如断开网络连接或关闭设备），它会发送 DHCP Release 消息释放 IP 地址，服务器会将该 IP 地址重新归还给地址池。</p>\n</li>\n</ul>\n<p>如何获得一个网络的子网部分？</p>\n<p>从ISP获得地址块中分配一个小地址块</p>\n<p>层次编址：聚集</p>\n<p>减少路由表的表项数量，减少路由信息的通告和计算的数量</p>\n<p>最长前缀匹配</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-124.png\"></p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-122.png\"></p>\n<p>一个ISP如何获得一个地址块？</p>\n<p>ICANN：Internet Corporation for Assigned Names and Numbers</p>\n<ul>\n<li><p>分配地址</p>\n</li>\n<li><p>管理DNS</p>\n</li>\n<li><p>分配域名解决冲突</p>\n</li>\n</ul>\n<h3 id=\"NAT\"><a href=\"#NAT\" class=\"headerlink\" title=\"NAT\"></a>NAT</h3><p>内网的设备全部使用内网地址，进出的时候再进行公网地址和内网地址的转换。</p>\n<p>16bit端口字段，使得局域网内有六万多个同时连接</p>\n<h4 id=\"动机：本地网络只有一个有效IP地址\"><a href=\"#动机：本地网络只有一个有效IP地址\" class=\"headerlink\" title=\"动机：本地网络只有一个有效IP地址\"></a>动机：本地网络只有一个有效IP地址</h4><ul>\n<li><p>不需要从ISP分配一块地址，可用一个IP地址用于所有的局域网设备</p>\n</li>\n<li><p>可以在局域网改变设备的地质情况下而无需通知外界</p>\n</li>\n<li><p>可以改变ISP而不需要改变内部的设备地址</p>\n</li>\n<li><p>局域网内部的设备没有明确的地址，对外是不可见的</p>\n</li>\n</ul>\n<h4 id=\"NAT路由器\"><a href=\"#NAT路由器\" class=\"headerlink\" title=\"NAT路由器\"></a>NAT路由器</h4><ul>\n<li><p>外出数据包：替换源地址和源端口为NAT的IP和端口，目标IP和端口不变</p>\n</li>\n<li><p>记住每个（源IP和端口）与（NAT的IP和端口）的相互映射</p>\n</li>\n<li><p>进入数据报：根据映射，替换目标IP和端口</p>\n</li>\n</ul>\n<h4 id=\"NAT的争议\"><a href=\"#NAT的争议\" class=\"headerlink\" title=\"NAT的争议\"></a>NAT的争议</h4><p>路由器只应对第3层做信息处理，而这里对端口号（第4层）作了处理，违反了分层原则</p>\n<p>此外，也违反了end-to-end原则</p>\n<ul>\n<li><p>端到端原则：复杂性放到网络边缘</p>\n<ul>\n<li>无需借助中转和变换，就可以直接传送到目标主机</li>\n</ul>\n</li>\n<li><p>NAT可能要被一些应用的设计者考虑，如P2P应用</p>\n</li>\n</ul>\n<p>地址短缺问题可以被IPv6解决</p>\n<p>NAT穿越：如果客户端需要连接在NAT后面的服务器</p>\n<h3 id=\"NAT穿越\"><a href=\"#NAT穿越\" class=\"headerlink\" title=\"NAT穿越\"></a>NAT穿越</h3><p>假如：客户端需要连接地址为10.0.0.1的服务器</p>\n<ul>\n<li><p>服务器地址10.0.0.1 LAN本地地址（客户端不能够使用其作为目标地址）</p>\n</li>\n<li><p>整网只有一个外部可见地址：138.76.29.7</p>\n</li>\n</ul>\n<h4 id=\"方案一：静态配置NAT\"><a href=\"#方案一：静态配置NAT\" class=\"headerlink\" title=\"方案一：静态配置NAT\"></a>方案一：静态配置NAT</h4><p>转发进来的对服务器特定端口连接请求，例如138.76.29.7 Port2500总是转发10.0.0.1 Port2500</p>\n<h4 id=\"方案二：UPnP协议，也称IGD协议\"><a href=\"#方案二：UPnP协议，也称IGD协议\" class=\"headerlink\" title=\"方案二：UPnP协议，也称IGD协议\"></a>方案二：UPnP协议，也称IGD协议</h4><p>允许内网设备动态查询NAT表项，然后增加或删除相应的表项。</p>\n<h4 id=\"方案三：中继\"><a href=\"#方案三：中继\" class=\"headerlink\" title=\"方案三：中继\"></a>方案三：中继</h4><p>NAT后的服务器与中继建立连接，外部的客户端连接到中继，中继作为两个连接的桥接</p>\n<h3 id=\"IPv6\"><a href=\"#IPv6\" class=\"headerlink\" title=\"IPv6\"></a>IPv6</h3><h4 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h4><ul>\n<li><p>32bit的地址空间很快会被用完（初始动机）</p>\n</li>\n<li><p>头部格式的改变帮助加速处理和转发</p>\n<ul>\n<li><p>TTL-1</p>\n</li>\n<li><p>头部checksum</p>\n</li>\n<li><p>分片</p>\n</li>\n</ul>\n</li>\n<li><p>头部格式改变帮助QoS</p>\n</li>\n</ul>\n<h4 id=\"IPv6数据报格式\"><a href=\"#IPv6数据报格式\" class=\"headerlink\" title=\"IPv6数据报格式\"></a>IPv6数据报格式</h4><p>固定的40字节头部，数据传输过程中不允许分片，由源主机进行分片</p>\n<p>4bit版本号，8bit优先级，20bit流标签，16bit载荷长度，8bit上层协议，8bit跳数限制，128bit源地址，128bit目标地址，data</p>\n<ul>\n<li><p>Priority 标示流中数据报的优先级</p>\n</li>\n<li><p>Flow Label 标示数据报在一个“flow”</p>\n</li>\n<li><p>Next header 标示上层协议或者扩展头部。用于告诉路由器或接收方如何处理data部分</p>\n</li>\n</ul>\n<p>与IPv4的变化</p>\n<ul>\n<li><p>移除了Checksum，降低了在每一跳中的处理速度</p>\n</li>\n<li><p>Options：移到头部之外，被NextHeader标示</p>\n</li>\n<li><p>ICMPv6：ICMP的新版本</p>\n<ul>\n<li><p>附加了报文类型</p>\n</li>\n<li><p>多播组管理功能</p>\n</li>\n</ul>\n</li>\n<li><p>过渡式的升级而非革命式的</p>\n</li>\n</ul>\n<h4 id=\"v4和v6的双栈协议：隧道技术\"><a href=\"#v4和v6的双栈协议：隧道技术\" class=\"headerlink\" title=\"v4和v6的双栈协议：隧道技术\"></a>v4和v6的双栈协议：隧道技术</h4><p>在IPv4路由器之间传输的IPv4数据报总携带IPv6数据报</p>\n<p>IPv6路由器也可以传IPv4</p>\n<h4 id=\"IPv6应用\"><a href=\"#IPv6应用\" class=\"headerlink\" title=\"IPv6应用\"></a>IPv6应用</h4><p>还需要较长的时间进行IPv6的部署</p>\n<p>应用层面的变化相当于把房子刷一遍漆，而IPv4变化为IPv6相当于重新盖一遍房子</p>\n<h2 id=\"4-4-通用转发和SDN-TODO\"><a href=\"#4-4-通用转发和SDN-TODO\" class=\"headerlink\" title=\"4.4 通用转发和SDN TODO\"></a>4.4 通用转发和SDN TODO</h2><h3 id=\"传统方式实现网络功能\"><a href=\"#传统方式实现网络功能\" class=\"headerlink\" title=\"传统方式实现网络功能\"></a>传统方式实现网络功能</h3><p>传统的方式有着数量众多，功能各异的中间盒：</p>\n<ul>\n<li><p>路由器的网络层功能：</p>\n<ul>\n<li><p>IP转发，对于到来的分组按照路由表决定如何转发，数据平面</p>\n</li>\n<li><p>路由：决定路径，计算路由表。控制平面</p>\n</li>\n</ul>\n</li>\n<li><p>还有各种网络设备</p>\n<ul>\n<li><p>交换机，防火墙，NAT，IDS，负载均衡设备</p>\n</li>\n<li><p>未来：不断增加的需求和相应的网络设备</p>\n</li>\n<li><p>需要不同设备去实现不同功能</p>\n<ul>\n<li><p>每台设备集成了控制平面和数据平面的功能</p>\n</li>\n<li><p>控制平面分布式地实现了各种控制平面功能</p>\n</li>\n<li><p>升级和部署网络设备十分困难</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-120.png\"></p>\n<p>网络设备控制平面的实现方式特点：</p>\n<p>互联网网络设备：传统方式都是通过分布式，每台设备的方法来实现数据平面和控制平面功能</p>\n<ul>\n<li><p>垂直继承：每台路由器或其他网络设备，包括</p>\n<ul>\n<li><p>硬件和私有的操作系统</p>\n</li>\n<li><p>互联网标准协议的私有实现</p>\n</li>\n<li><p>从上到下都有同一个厂商提供（被设备绑架）</p>\n</li>\n</ul>\n</li>\n<li><p>每个设备都实现了 数据平面和控制平面的事情</p>\n<ul>\n<li>控制平面的功能是分布式地实现的</li>\n</ul>\n</li>\n<li><p>设备基本上只能按照固定方式工作，控制逻辑固化。</p>\n</li>\n</ul>\n<h4 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h4><p>垂直领域继承-&gt;昂贵且不利于创新生态</p>\n<p>分布式的、固化的设备功能，网络设备种类繁多</p>\n<ul>\n<li><p>无法改变路由等工作逻辑，无法实现流量工程等高级特性</p>\n</li>\n<li><p>配置错误影响全网运行，升级和维护会涉及到全网设备：管理困难</p>\n</li>\n<li><p>要增加新的网络功能，需要设计、实现以及部署新的特定设备，设备种类繁多</p>\n</li>\n</ul>\n<h3 id=\"SDN：逻辑上集中的控制平面\"><a href=\"#SDN：逻辑上集中的控制平面\" class=\"headerlink\" title=\"SDN：逻辑上集中的控制平面\"></a>SDN：逻辑上集中的控制平面</h3><p>一个不同的（通常是远程的）控制器和CA交互，控制器决定分组转发的逻辑（可编程），CA所在设备执行逻辑</p>\n<p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-126.png\"></p>\n<h4 id=\"主要思路\"><a href=\"#主要思路\" class=\"headerlink\" title=\"主要思路\"></a>主要思路</h4><ul>\n<li><p>网络设备数据平面和控制平面分离</p>\n</li>\n<li><p>数据平面-分组交换机</p>\n<ul>\n<li><p>将路由器、交换机和目前大多数网络设备的功能进一步抽象：按照流表（由控制平面设置的控制逻辑）进行PDU的动作（包括转发、丢弃、拷贝、泛洪、阻塞等）</p>\n</li>\n<li><p>统一化设备功能：SDN交换机，执行控制逻辑</p>\n</li>\n</ul>\n</li>\n<li><p>控制平面-控制器+网络应用</p>\n<ul>\n<li><p>分离、集中</p>\n</li>\n<li><p>计算和下发控制逻辑：流表</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"数据平面和控制平面分离的优势\"><a href=\"#数据平面和控制平面分离的优势\" class=\"headerlink\" title=\"数据平面和控制平面分离的优势\"></a>数据平面和控制平面分离的优势</h4><ul>\n<li><p>水平继承控制平面的开放实现（而非私有实现），创造出好的产业生态，促进发展</p>\n</li>\n<li><p>集中式实现控制逻辑，网络管理容易</p>\n</li>\n<li><p>基于流表的匹配+行动的工作方式允许“可编程的”分组交换机</p>\n</li>\n</ul>\n<h4 id=\"类比主框架到PC的演变\"><a href=\"#类比主框架到PC的演变\" class=\"headerlink\" title=\"类比主框架到PC的演变\"></a>类比主框架到PC的演变</h4><p><img src=\"/../Asset/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E4%B8%AD%E7%A7%91%E5%A4%A7%EF%BC%89_Chapter4/image-127.png\"></p>\n<p>在传统模式下，硬件，OS，软件都是一家厂商统一实现垄断，不利于行业的发展和创新</p>\n<p>但是SDN的横向集合可以解决这种问题，不同厂家可以生产不同层次的东西</p>\n<p>类似于Google推出安卓，就是防止苹果iOS的垄断，如果基于iOS开发软件，那么如果不合苹果的要求，就会被掐死</p>\n<h4 id=\"SDN特点\"><a href=\"#SDN特点\" class=\"headerlink\" title=\"SDN特点\"></a>SDN特点</h4>","categories":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/categories/计算机网络.json"},{"name":"中科大","slug":"计算机网络/中科大","count":8,"path":"api/categories/计算机网络/中科大.json"}],"tags":[{"name":"计算机网络","slug":"计算机网络","count":8,"path":"api/tags/计算机网络.json"}]}